// Look into the following tools of SASS:
// Variables
// Nesting
// Mixins
// Functions
// Partials & Importing
// Inheritance
// The '&' Operator
// Control Directives (if else)
// Interpolation
// Placeholders

// Variables
$primary-color: #86ba8a;
$secondary-color: #3d3d3d;
$light-gray: #f5f5f5;
$border-color: #ddd;
$focus-color: #5a9a5e;
$error-color: #e74c3c;

// Mixins
@mixin button-base {
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  font-family: inherit;
}

@mixin input-focus {
  outline: none;
  border-color: $focus-color;
  box-shadow: 0 0 0 2px rgba($focus-color, 0.2);
}

@mixin hover-effect($scale: 1.02) {
  &:hover {
    transform: scale($scale);
  }
}

// Functions
@function lighten-color($color, $amount: 10%) {
  @return lighten($color, $amount);
}

// Placeholder
%input-base {
  padding: 12px 16px;
  border: 2px solid $border-color;
  border-radius: 8px;
  font-size: 16px;
  width: 100%;
  box-sizing: border-box;
}

// Main form styles
.search {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 600px;
  margin: 0 auto;
  padding: 2rem;
  background-color: $light-gray;
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  // Responsive design
  @media (min-width: 768px) {
    flex-direction: row;
    align-items: flex-end;
  }

  // Input styling
  input[type="text"] {
    @extend %input-base;
    flex: 1;

    &:focus {
      @include input-focus;
    }

    &::placeholder {
      color: lighten($secondary-color, 40%);
      font-style: italic;
    }

    // Input validation states
    &:invalid {
      border-color: $error-color;
    }

    &:valid {
      border-color: $primary-color;
    }
  }

  // Button styling
  button {
    @include button-base;
    @include hover-effect;
    background-color: $primary-color;
    color: $secondary-color;
    padding: 12px 24px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    min-width: 120px;

    // Button states
    &:hover {
      background-color: lighten-color($primary-color, 5%);
    }

    &:active {
      transform: scale(0.98);
      background-color: darken($primary-color, 5%);
    }

    &:disabled {
      background-color: lighten($primary-color, 20%);
      cursor: not-allowed;
      transform: none;

      &:hover {
        background-color: lighten($primary-color, 20%);
        transform: none;
      }
    }

    // Focus state for accessibility
    &:focus-visible {
      @include input-focus;
    }
  }

  // Screen reader only label
  .srOnly {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
}
